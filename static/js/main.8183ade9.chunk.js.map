{"version":3,"sources":["components/MetricBmr.js","components/ImperialBmr.js","components/BtnChoose.js","components/BMR.js","App.js","reportWebVitals.js","index.js"],"names":["MetricBmr","handleWeightChange","event","setState","weight","target","value","handleGenderChange","gender","handleAgeChange","age","handleHeightChange","height","handleActivityChange","activityValue","state","error","bmr","activityRes","activityVisible","calmmr","this","document","getElementById","classList","remove","calActivity","activity","console","log","result","className","id","onChange","checked","type","name","min","max","onClick","bmrBtn","activityBtn","React","Component","ImperialBmr","handleHeightFeetChange","heightFeet","handleHeightInchesChange","heightInches","BtnChoose","props","btn","BMR","metricbmr","style","backgroundColor","color","border","outline","borderRadius","padding","margin","cursor","imperial","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8183ade9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./BMRStylesheet.css\";\r\n\r\nclass MetricBmr extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      weight: \"\",\r\n      height: \"\",\r\n      age: \"\",\r\n      gender: \"\",\r\n      error: \"\",\r\n      bmr: \"\",\r\n      activityValue: \"\",\r\n      activityRes: \"\",\r\n      activityVisible: false\r\n    };\r\n  }\r\n  // handle to take value from input\r\n  handleWeightChange = (event) => {\r\n    this.setState({\r\n      weight: event.target.value\r\n    });\r\n  };\r\n\r\n  handleGenderChange = (event) => {\r\n    this.setState({\r\n      gender: event.target.value\r\n    });\r\n  };\r\n\r\n  handleAgeChange = (event) => {\r\n    this.setState({\r\n      age: event.target.value\r\n    });\r\n  };\r\n\r\n  handleHeightChange = (event) => {\r\n    this.setState({\r\n      height: event.target.value\r\n    });\r\n  };\r\n\r\n  bmrBtn() {\r\n    let age = this.state.age;\r\n    let gender = this.state.gender;\r\n    let height = this.state.height;\r\n    let weight = this.state.weight;\r\n    if (weight == \"\" || age == \"\" || height == \"\" || gender == \"\") {\r\n      this.setState({\r\n        error: \"All field are required\"\r\n      });\r\n      return;\r\n    }\r\n    this.setState({ error: \"\" });\r\n\r\n    let calmmr;\r\n    if (gender === \"1\") {\r\n      //women bmr\r\n      calmmr = 655 + 9.563 * weight + 1.85 * height - 4.676 * age;\r\n    } else if (gender === \"2\") {\r\n      //men bmr\r\n      calmmr = 66.5 + 13.75 * weight + 5.003 * height - 6.755 * age;\r\n    }\r\n    this.setState({\r\n      bmr: calmmr\r\n    });\r\n    if (calmmr) {\r\n      var activityVisibility = document.getElementById(\"workout\");\r\n      activityVisibility.classList.remove(\"hidden\");\r\n      this.setState({\r\n        activityVisible: true\r\n      });\r\n    }\r\n  }\r\n\r\n  handleActivityChange = (event) => {\r\n    this.setState({\r\n      activityValue: event.target.value\r\n    });\r\n  };\r\n\r\n  activityBtn() {\r\n    let calActivity;\r\n    if (this.state.bmr) {\r\n      let activity = this.state.activityValue;\r\n      calActivity = this.state.bmr * activity;\r\n      this.setState({\r\n        activityRes: calActivity\r\n      });\r\n      console.log(calActivity);\r\n    } else {\r\n      this.setState({\r\n        error: \"first calculate bmr\"\r\n      });\r\n      return;\r\n    }\r\n    this.setState({ error: \"\" });\r\n  }\r\n\r\n  render() {\r\n    let error;\r\n    if (this.state.error) {\r\n      error = <div className=\"error\">{this.state.error}</div>;\r\n    }\r\n\r\n    let result;\r\n    if (this.state.bmr) {\r\n      result = <div className=\"result\">{this.state.bmr}</div>;\r\n    }\r\n    let activity;\r\n    if (this.state.activityRes) {\r\n      activity = <div className=\"result\">{this.state.activityRes}</div>;\r\n    }\r\n    return (\r\n      <div>\r\n        <div id=\"bmrcalc\">\r\n          <div className=\"form\">\r\n            <h3>METRIC BMR</h3>\r\n            <h2>BMR &amp; Daily Calorie Calculator</h2>\r\n            {error}\r\n            <div className=\"inputwrap\">\r\n              <label className=\"label\">Gender</label>\r\n              <label>\r\n                <input\r\n                  onChange={this.handleGenderChange}\r\n                  checked={this.state.gender === \"1\"}\r\n                  type=\"radio\"\r\n                  className=\"genderF\"\r\n                  name=\"gender\"\r\n                  value=\"1\"\r\n                />\r\n                Female\r\n              </label>\r\n              <label>\r\n                <input\r\n                  onChange={this.handleGenderChange}\r\n                  type=\"radio\"\r\n                  className=\"genderM\"\r\n                  name=\"gender\"\r\n                  value=\"2\"\r\n                  checked={this.state.gender === \"2\"}\r\n                />\r\n                Male\r\n              </label>\r\n            </div>\r\n            <div className=\"inputwrap\">\r\n              <label className=\"label\">Weight in Kg</label>\r\n              <input\r\n                value={this.state.weight}\r\n                onChange={this.handleWeightChange}\r\n                type=\"number\"\r\n                name=\"weight\"\r\n                className=\"weight\"\r\n                min=\"0\"\r\n                max=\"999\"\r\n              />\r\n            </div>\r\n            <div className=\"inputwrap\">\r\n              <label className=\"label\">Height in cm</label>\r\n              <input\r\n                onChange={this.handleHeightChange}\r\n                type=\"number\"\r\n                name=\"height\"\r\n                className=\"height\"\r\n                min=\"0\"\r\n                max=\"8\"\r\n              />\r\n            </div>\r\n            <div className=\"inputwrap\">\r\n              <label className=\"label\">Age in years</label>\r\n              <input\r\n                onChange={this.handleAgeChange}\r\n                type=\"number\"\r\n                className=\"age\"\r\n                name=\"age\"\r\n                min=\"0\"\r\n                max=\"120\"\r\n              />\r\n            </div>\r\n            <button onClick={() => this.bmrBtn()} className=\"btn\" type=\"button\">\r\n              Calculate BMR\r\n            </button>\r\n            {result}\r\n            <div className=\"workout hidden \" id=\"workout\">\r\n              <div className=\"inputwrap\">\r\n                <label className=\"label\">Workout in a Week</label>\r\n                <select\r\n                  className=\"activity\"\r\n                  name=\"activity\"\r\n                  onChange={this.handleActivityChange}\r\n                >\r\n                  <option value=\"\">Select your Activity</option>\r\n                  <option\r\n                    value=\"1.2\"\r\n                    checked={this.state.activityValue === 1.2}\r\n                  >\r\n                    Sedentary (Very little or no exercise, and desk job)\r\n                  </option>\r\n                  <option\r\n                    value=\"1.375\"\r\n                    checked={this.state.activityValue === 1.375}\r\n                  >\r\n                    Lightly Active (Light exercise 1 to 3 days per week)\r\n                  </option>\r\n                  <option\r\n                    value=\"1.55\"\r\n                    checked={this.state.activityValue === 1.55}\r\n                  >\r\n                    Moderately Active (Moderate exercise 3 to 5 days per week)\r\n                  </option>\r\n                  <option\r\n                    value=\"1.725\"\r\n                    checked={this.state.activityValue === 1.725}\r\n                  >\r\n                    Very Active (Heavy exercise 6 to 7 days per week)\r\n                  </option>\r\n                  <option\r\n                    value=\"1.9\"\r\n                    checked={this.state.activityValue === 1.9}\r\n                  >\r\n                    Extremely Active (Very intense exercise, and physical job,\r\n                    exercise multiple times per day)\r\n                  </option>\r\n                </select>\r\n              </div>\r\n              <button\r\n                className=\"btn\"\r\n                type=\"button\"\r\n                onClick={() => this.activityBtn()}\r\n              >\r\n                Calculate Calories\r\n              </button>\r\n              {activity}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MetricBmr;\r\n","import React from \"react\";\r\nimport \"./BMRStylesheet.css\";\r\n\r\nclass ImperialBmr extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      weight: \"\",\r\n      heightFeet: \"\",\r\n      heightInches: \"\",\r\n      age: \"\",\r\n      gender: \"\",\r\n      error: \"\",\r\n      bmr: \"\",\r\n      activityValue: \"\",\r\n      activityRes: \"\",\r\n      activityVisible: false\r\n    };\r\n  }\r\n\r\n  handleWeightChange = (event) => {\r\n    this.setState({\r\n      weight: event.target.value\r\n    });\r\n  };\r\n\r\n  handleGenderChange = (event) => {\r\n    this.setState({\r\n      gender: event.target.value\r\n    });\r\n  };\r\n\r\n  handleAgeChange = (event) => {\r\n    this.setState({\r\n      age: event.target.value\r\n    });\r\n  };\r\n\r\n  handleHeightFeetChange = (event) => {\r\n    this.setState({\r\n      heightFeet: event.target.value\r\n    });\r\n  };\r\n\r\n  handleHeightInchesChange = (event) => {\r\n    this.setState({\r\n      heightInches: event.target.value\r\n    });\r\n  };\r\n\r\n  bmrBtn() {\r\n    let age = this.state.age;\r\n    let gender = this.state.gender;\r\n    let heightFeet = this.state.heightFeet;\r\n    let heightInches = this.state.heightInches;\r\n    let weight = this.state.weight;\r\n    if (\r\n      weight == \"\" ||\r\n      age == \"\" ||\r\n      heightInches == \"\" ||\r\n      heightInches == \"\" ||\r\n      gender == \"\"\r\n    ) {\r\n      this.setState({\r\n        error: \"All field are required\"\r\n      });\r\n      return;\r\n    }\r\n    this.setState({ error: \"\" });\r\n\r\n    let calmmr;\r\n    let height = heightFeet * 30.48 + heightInches * 2.54;\r\n\r\n    if (gender === \"1\") {\r\n      //women bmr\r\n      calmmr = 655.1 + 4.35 * weight + 4.7 * height - 4.7 * age;\r\n    } else if (gender === \"2\") {\r\n      // man bmr\r\n      calmmr = 66 + 6.2 * weight + 12.7 * height - 6.76 * age;\r\n    }\r\n    this.setState({\r\n      bmr: calmmr\r\n    });\r\n    if (calmmr) {\r\n      var activityVisibility = document.getElementById(\"workout\");\r\n      activityVisibility.classList.remove(\"hidden\");\r\n      this.setState({\r\n        activityVisible: true\r\n      });\r\n    }\r\n  }\r\n\r\n  handleActivityChange = (event) => {\r\n    this.setState({\r\n      activityValue: event.target.value\r\n    });\r\n  };\r\n\r\n  activityBtn() {\r\n    let calActivity;\r\n    if (this.state.bmr) {\r\n      let activity = this.state.activityValue;\r\n      calActivity = this.state.bmr * activity;\r\n      this.setState({\r\n        activityRes: calActivity\r\n      });\r\n      console.log(calActivity);\r\n    } else {\r\n      this.setState({\r\n        error: \"first calculate bmr\"\r\n      });\r\n      return;\r\n    }\r\n    this.setState({ error: \"\" });\r\n  }\r\n  render() {\r\n    let error;\r\n    if (this.state.error) {\r\n      error = <div className=\"error\">{this.state.error}</div>;\r\n    }\r\n\r\n    let result;\r\n    if (this.state.bmr) {\r\n      result = <div className=\"result\">{this.state.bmr}</div>;\r\n    }\r\n    let activity;\r\n    if (this.state.activityRes) {\r\n      activity = <div className=\"result\">{this.state.activityRes}</div>;\r\n    }\r\n    return (\r\n      <div>\r\n        <div id=\"bmrcalc\">\r\n          <div className=\"form\">\r\n            <h3>IMPERIAL BMR</h3>\r\n            <h2>BMR &amp; Daily Calorie Calculator</h2>\r\n            {error}\r\n            <div className=\"inputwrap\">\r\n              <label className=\"label\">Gender</label>\r\n              <label>\r\n                <input\r\n                  onChange={this.handleGenderChange}\r\n                  checked={this.state.gender === \"1\"}\r\n                  type=\"radio\"\r\n                  className=\"genderF\"\r\n                  name=\"gender\"\r\n                  value=\"1\"\r\n                />\r\n                Female\r\n              </label>\r\n              <label>\r\n                <input\r\n                  onChange={this.handleGenderChange}\r\n                  checked={this.state.gender === \"2\"}\r\n                  type=\"radio\"\r\n                  className=\"genderM\"\r\n                  name=\"gender\"\r\n                  value=\"2\"\r\n                />\r\n                Male\r\n              </label>\r\n            </div>\r\n            <div className=\"inputwrap\">\r\n              <label className=\"label\">Weight in Pounds</label>\r\n              <input\r\n                onChange={this.handleWeightChange}\r\n                value={this.state.weight}\r\n                type=\"number\"\r\n                name=\"weight\"\r\n                className=\"weight\"\r\n                min=\"0\"\r\n                max=\"999\"\r\n              />\r\n            </div>\r\n            <div className=\"inputwrap\">\r\n              <label className=\"label\">Height in feet and inches</label>\r\n              <input\r\n                onChange={this.handleHeightFeetChange}\r\n                value={this.state.heightFeet}\r\n                type=\"number\"\r\n                name=\"heightFeet\"\r\n                className=\"heightFeet\"\r\n                min=\"0\"\r\n                max=\"8\"\r\n              />\r\n              <input\r\n                onChange={this.handleHeightInchesChange}\r\n                value={this.state.heightInches}\r\n                type=\"number\"\r\n                name=\"heightInches\"\r\n                className=\"heightInches\"\r\n                min=\"0\"\r\n                max=\"11\"\r\n              />\r\n            </div>\r\n            <div className=\"inputwrap\">\r\n              <label className=\"label\">Age in years</label>\r\n              <input\r\n                onChange={this.handleAgeChange}\r\n                value={this.state.age}\r\n                type=\"number\"\r\n                className=\"age\"\r\n                name=\"age\"\r\n                min=\"0\"\r\n                max=\"120\"\r\n              />\r\n            </div>\r\n            <button onClick={() => this.bmrBtn()} className=\"btn\" type=\"button\">\r\n              Calculate BMR\r\n            </button>\r\n            {result}\r\n            <div className=\"workout hidden\" id=\"workout\">\r\n              <div className=\"inputwrap\">\r\n                <label className=\"label\">Workout in a Week</label>\r\n                <select\r\n                  className=\"activity\"\r\n                  name=\"activity\"\r\n                  onChange={this.handleActivityChange}\r\n                >\r\n                  <option value=\"\">Select your Activity</option>\r\n                  <option\r\n                    value=\"1.2\"\r\n                    checked={this.state.activityValue === 1.2}\r\n                  >\r\n                    Sedentary (Very little or no exercise, and desk job)\r\n                  </option>\r\n                  <option\r\n                    value=\"1.375\"\r\n                    checked={this.state.activityValue === 1.375}\r\n                  >\r\n                    Lightly Active (Light exercise 1 to 3 days per week)\r\n                  </option>\r\n                  <option\r\n                    value=\"1.55\"\r\n                    checked={this.state.activityValue === 1.55}\r\n                  >\r\n                    Moderately Active (Moderate exercise 3 to 5 days per week)\r\n                  </option>\r\n                  <option\r\n                    value=\"1.725\"\r\n                    checked={this.state.activityValue === 1.725}\r\n                  >\r\n                    Very Active (Heavy exercise 6 to 7 days per week)\r\n                  </option>\r\n                  <option\r\n                    value=\"1.9\"\r\n                    checked={this.state.activityValue === 1.9}\r\n                  >\r\n                    Extremely Active (Very intense exercise, and physical job,\r\n                    exercise multiple times per day)\r\n                  </option>\r\n                </select>\r\n              </div>\r\n              <button\r\n                onClick={() => this.activityBtn()}\r\n                className=\"btn\"\r\n                type=\"button\"\r\n              >\r\n                Calculate Calories\r\n              </button>\r\n              {activity}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ImperialBmr;\r\n","import React from \"react\";\r\nimport MetricBmr from \"./MetricBmr\";\r\nimport ImperialBmr from \"./ImperialBmr\";\r\n\r\nfunction BtnChoose(props) {\r\n  if (props.btn === 1) {\r\n    return (\r\n      <div>\r\n        <MetricBmr />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <ImperialBmr />\r\n    </div>\r\n  );\r\n}\r\nexport default BtnChoose;\r\n","import React from \"react\";\r\nimport BtnChoose from \"./BtnChoose\";\r\n\r\nclass BMR extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      btn: 1\r\n    };\r\n  }\r\n  imperial() {\r\n    this.setState({\r\n      btn: 2\r\n    });\r\n  }\r\n  metricbmr() {\r\n    this.setState({\r\n      btn: 1\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button\r\n          onClick={() => this.metricbmr()}\r\n          style={{\r\n            backgroundColor: \"black\",\r\n            color: \"white\",\r\n            border: \"2px solid transparent\",\r\n            outline: \"none\",\r\n            borderRadius: \"20px\",\r\n            padding: \"5px 20px\",\r\n            margin: \"20px\",\r\n            cursor: \"pointer\"\r\n          }}\r\n        >\r\n          Metric\r\n        </button>\r\n        <button\r\n          onClick={() => this.imperial()}\r\n          style={{\r\n            backgroundColor: \"black\",\r\n            color: \"white\",\r\n            border: \"2px solid transparent\",\r\n            outline: \"none\",\r\n            borderRadius: \"20px\",\r\n            padding: \"5px 20px\",\r\n            margin: \"20px\",\r\n            cursor:\"pointer\"\r\n          }}\r\n        >\r\n          Imperial\r\n        </button>\r\n        <BtnChoose btn={this.state.btn} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default BMR;\r\n","import React from \"react\";\nimport \"./styles.css\";\nimport BMR from './components/BMR'\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <BMR />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}